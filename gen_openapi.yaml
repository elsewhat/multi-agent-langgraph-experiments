openapi: 3.1.0
info:
  title: Bowling Game Management API
  description: |
    API for managing bowling games and related audits based on the given Oracle tables.
  version: 1.0.0
  contact:
    name: API Support
    url: https://www.example.com/support
    email: support@example.com
servers:
  - url: http://localhost/api/v1
paths:
  '/games':
    get:
      summary: Get all games with optional bowler filter
      description: Retrieve an array of Game objects based on the provided parameters.
      operationId: getAllGames
      tags:
        - Bowling Game
      parameters:
        - name: bowlerId
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
          description: Optional filter for a specific bowler.
      responses:
        '200':
          description: An array of Game objects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Game'

  '/games/{gameId}':
    get:
      summary: Get game details by ID
      description: Retrieve a single Game object based on the provided game ID.
      operationId: getGameById
      tags:
        - Bowling Game
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The ID of the game.
      responses:
        '200':
          description: A single Game object.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'

    put:
      summary: Update an existing game completely.
      description: Replace the Game object with the provided data for the specified game ID.
      operationId: replaceGame
      tags:
        - Bowling Game
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The ID of the game to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        '200':
          description: OK

    delete:
      summary: Delete the specified game.
      description: Remove the Game object for the specified game ID.
      operationId: deleteGame
      tags:
        - Bowling Game
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The ID of the game to delete.
      responses:
        '204':
          description: No Content

  '/games/{gameId}/frames':
    post:
      summary: Create a new frame in the specified game
      description: Create a new Frame object with the provided data for the specified bowler and game.
      operationId: createFrame
      tags:
        - Bowling Game
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The ID of the game.
        - name: bowlerId
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
          description: Optional filter for a specific bowler.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Frame'
      responses:
        '201':
          description: Created

  '/games/{gameId}/frames/{frameNumber}':
    put:
      summary: Update an existing frame completely.
      description: Replace the Frame object with the provided data for the specified game and frame number.
      operationId: replaceFrame
      tags:
        - Bowling Game
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The ID of the game.
        - name: frameNumber
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 10
          description: The number of the frame to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Frame'
      responses:
        '200':
          description: OK

    patch:
      summary: Partially update specific fields of a frame.
      description: Update one or more fields of the Frame object for the specified game and frame number with the provided data.
      operationId: patchFrame
      tags:
        - Bowling Game
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The ID of the game.
        - name: frameNumber
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 10
          description: The number of the frame to update.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Frame'
      responses:
        '200':
          description: OK

    delete:
      summary: Delete the specified frame.
      description: Remove the Frame object for the specified game and frame number.
      operationId: deleteFrame
      tags:
        - Bowling Game
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The ID of the game.
        - name: frameNumber
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 10
          description: The number of the frame to delete.
      responses:
        '204':
          description: No Content

  '/games/{gameId}/frames/{frameNumber}/audit':
    get:
      summary: Get audit records for a specific frame
      description: Retrieve an array of FrameAudit objects based on the provided parameters.
      operationId: getFrameAuditsByGameAndFrameNumber
      tags:
        - Bowling Game Audit
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
          description: The ID of the game.
        - name: frameNumber
          in: path
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 10
          description: The number of the frame to retrieve audits for.
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Optional filter for audit records starting from this date (inclusive).
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Optional filter for audit records up to and including this date.
      responses:
        '200':
          description: An array of FrameAudit objects.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FrameAudit'

security:
  - api_key: []

components:
  securitySchemes:
    api_key:
      type: apiKey
      name: X-API-Key
      in: header

  schemas:
    Game:
      type: object
      properties:
        id:
          type: integer
          minimum: 1
        bowlerId:
          type: integer
          minimum: 1
    Frame:
      type: object
      properties:
        strike:
          type: string
          maxLength: 1
        spare:
          type: string
          maxLength: 1
        score:
          type: integer
          minimum: 0
          maximum: 300
      required:
        - score
    FrameAudit:
      type: object
      properties:
        action:
          type: string
          enum: ["CREATE", "UPDATE", "DELETE"]
        timestamp:
          type: string
          format: date-time
        user:
          type: string
          maxLength: 100
        oldValue:
          $ref: '#/components/schemas/Frame'
        newValue:
          $ref: '#/components/schemas/Frame'

tags:
  - name: Bowling Game
    description: Operations on bowling games and frames.
  - name: Bowling Game Audit
    description: Operations on auditing changes to bowling game frames.